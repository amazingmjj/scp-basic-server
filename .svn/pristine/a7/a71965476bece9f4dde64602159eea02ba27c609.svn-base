package org.zhd.basic.service;

import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
import com.baomidou.mybatisplus.core.metadata.IPage;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import org.springframework.beans.BeanUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.xy.api.dpi.BaseService;
import org.xy.api.dto.BaseListDto;
import org.xy.api.dto.basic.DptDto;
import org.zhd.basic.entity.Dpt;
import org.zhd.basic.mapper.DptMapper;
import org.xy.api.utils.DaoUtil;

import java.util.*;
import java.util.stream.Collectors;

/**
* 部门业务层
*
* @author samy
*/
@Service
public class DptService implements BaseService<DptDto, Long> {

    @Autowired
    private DptMapper dptMapper;

    @Autowired
    private OrgService orgService;

    @Override
    public DptDto saveOrUpdate(DptDto model) throws Exception {
        // FIXME DO SAVE ACTION
        return null;
    }

    @Override
    public BaseListDto<DptDto> selectPage(Map<String, Object> params) throws Exception {
        // FIXME DO SELECTPAGE ACTION
        int currentPage = Integer.parseInt(params.getOrDefault("currentPage", 1).toString());
        int pageSize = Integer.parseInt(params.getOrDefault("pageSize", 10).toString());
        QueryWrapper<Dpt> qw = new QueryWrapper<>();
        DaoUtil.parseGenericQueryWrapper(qw, params, Dpt.class);
        IPage<Dpt> pages = dptMapper.selectPage((Page<Dpt>) DaoUtil.queryPage(currentPage, pageSize), qw);
        List<DptDto> list = pages.getRecords().stream().map(entity -> entity2Dto(entity)).collect(Collectors.toList());
        return new BaseListDto<DptDto>(list, (int) pages.getTotal());
    }

    @Override
    public void delete(List<Long> ids) throws Exception {
        dptMapper.deleteBatchIds(ids);
    }

    @Override
    public DptDto selectById(Long id) throws Exception {
        Dpt model = dptMapper.selectById(id);
        return entity2Dto(model);
    }

    @Override
    public DptDto entity2Dto(Object source) {
        Dpt dpt = (Dpt) source;
        List<String> codes = Arrays.asList(dpt.getOrgCode().split(","));
        DptDto dto = new DptDto();
        BeanUtils.copyProperties(dpt, dto);
        dto.setOrgs(orgService.selectByCodes(codes));
        return dto;
    }
}